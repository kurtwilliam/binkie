{"version":3,"sources":["Components/shared/Chunk.js","Components/Body/Youtube/index.js","Components/Body/Youtube/Youtube.js","Components/Body/Instagram/index.js","Components/Body/Instagram/Instagram.js","Components/Body/LinkedIn/HandShake.js","Components/Body/LinkedIn/Hand.js","Components/Body/index.js","Components/Body/Body.js","Components/Footer/Footer.js","Components/Footer/index.js","Components/Header/data.js","Components/Header/Binkie.js","Components/Header/HeaderCont.js","Components/Header/Header.js","Components/Header/index.js","App.js","serviceWorker.js","index.js","assets/fonts/Ogg-Roman.otf"],"names":["Chunk","styled","div","_templateObject","Youtube","_useState","useState","_useState2","Object","slicedToArray","videoId","_useState3","_useState4","useEffect","axios","get","concat","process","YOUTUBE_API_KEY","then","res","console","log","catch","err","react_default","a","createElement","shared_Chunk","YouTube","Instagram","HandShake_templateObject","Hand_templateObject","Body","react","Body_Youtube","Body_Instagram","Contact","p","Footer_templateObject","props","theme","grey","Footer","messages","Binkie","h1","Binkie_templateObject","HeaderCont","header","HeaderCont_templateObject","colors","randomInt","max","Math","floor","random","Header","state","message","length","shadow","reRainbow","_this","setState","_this2","this","setTimeout","_this$state","Header_HeaderCont","Header_Binkie","style","textShadow","onClick","onMouseOver","Component","require","config","main","gradient","GlobalStyle","createGlobalStyle","App_templateObject","Ogg","Container","_templateObject2","client","ApolloClient","uri","App","react_apollo_browser_umd","styled_components_browser_esm","Components_Header","Components_Body","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.a3a441f7.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Chunk = styled.div`\r\n  position: relative;\r\n  min-height: 75vh;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default Chunk;\r\n","import Youtube from \"./Youtube\";\r\n\r\nexport default Youtube;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Chunk from \"../../shared/Chunk\";\r\nimport axios from \"axios\";\r\n\r\nimport YouTube from \"react-youtube\";\r\nconst spelunky = \"lB_6LZLQOKs\";\r\nconst binkieId = \"UCqoMPjVw7Snc9owzyg94eMA\";\r\n\r\nconst Youtube = () => {\r\n  const [videoId, setVideoId] = useState(spelunky);\r\n  const [player, setPlayer] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://www.googleapis.com/youtube/v3/search?key=${\r\n          process.env.YOUTUBE_API_KEY\r\n        }&channelId=${binkieId}&part=snippet&maxResults=3&order=date&type=video`\r\n      )\r\n      .then(res => console.log(res))\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  // const onReady = event => setPlayer(event.target);\r\n  // const onPlayVideo = () => player.playVideo();\r\n  // const onPauseVideo = () => player.pauseVideo();\r\n  // const onChangeVideo = () =>\r\n  // setVideoId(videoId === videoIdA ? videoIdB : videoIdA);\r\n\r\n  return (\r\n    <Chunk>\r\n      Binkie YouTube Videos\r\n      <YouTube videoId={videoId} />\r\n      {/* <button onClick={onPlayVideo}>Play</button>\r\n      <button onClick={onPauseVideo}>Pause</button>\r\n      <button onClick={onChangeVideo}>Change Video</button> */}\r\n    </Chunk>\r\n  );\r\n};\r\n\r\nexport default Youtube;\r\n","import Instagram from \"./Instagram\";\r\n\r\nexport default Instagram;\r\n","import React from \"react\";\r\nimport Chunk from \"../../shared/Chunk\";\r\n\r\nconst Instagram = () => <Chunk>dinkie binkie</Chunk>;\r\n\r\nexport default Instagram;\r\n","import styled from \"styled-components\";\r\n\r\nconst HandShake = styled.div`\r\n  width: 100%;\r\n  border: 1px solid black;\r\n`;\r\n\r\nexport default HandShake;\r\n","import styled from \"styled-components\";\r\n\r\nconst Hand = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  background: red;\r\n`;\r\n\r\nexport default Hand;\r\n","import Body from './Body';\r\n\r\nexport default Body;","import React, { Fragment } from \"react\";\r\n\r\nimport Youtube from \"./Youtube\";\r\nimport Instagram from \"./Instagram\";\r\nimport LinkedIn from \"./LinkedIn\";\r\n\r\n// Map over body chunks we get from state\r\n// from here we render a body piece\r\n// in the body piece we render the type of body it is\r\n\r\nconst Body = () => (\r\n  <Fragment>\r\n    <Youtube />\r\n    <Instagram />\r\n    {/* <LinkedIn /> */}\r\n  </Fragment>\r\n);\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Contact = styled.p`\r\n  text-align: right;\r\n  font-family: \"Ogg\", serif;\r\n  color: ${props => props.theme.grey};\r\n  padding: 100px 0 30px;\r\n  font-size: 3.2rem;\r\n`;\r\n\r\nconst Footer = () => <Contact>b@binkie.town</Contact>;\r\n\r\nexport default Footer;\r\n","import Footer from \"./Footer\";\r\n\r\nexport default Footer;\r\n","export const messages = [\"Man Name\"];\r\n","import styled from \"styled-components\";\r\n\r\nconst Binkie = styled.h1`\r\n  font-size: 25vmin;\r\n  transition: all 1s ease;\r\n  text-align: center;\r\n  font-style: italic;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport default Binkie;\r\n","import styled from \"styled-components\";\r\n\r\nconst HeaderCont = styled.header`\r\n  position: relative;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 150px;\r\n\r\n  span {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n  }\r\n\r\n  h2 {\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 0px;\r\n    font-family: Sarabun, sans-serif;\r\n  }\r\n`;\r\n\r\nexport default HeaderCont;\r\n","import React, { Component } from \"react\";\r\nimport { messages } from \"./data\";\r\n\r\nimport Binkie from \"./Binkie\";\r\nimport HeaderCont from \"./HeaderCont\";\r\n\r\nconst colors = [\r\n  \"#5F6460\",\r\n  \"#AC836B\",\r\n  \"#C5E199\",\r\n  \"#5DC99F\",\r\n  \"#3B6D81\",\r\n  \"#6F677F\",\r\n  \"#812A3A\",\r\n  \"#79341A\",\r\n  \"#504235\",\r\n  \"#7c7153\",\r\n  \"#604041\",\r\n  \"#7b7247\",\r\n  \"#3d3938\",\r\n  \"#847766\",\r\n  \"#7d464b\"\r\n];\r\n\r\nconst randomInt = max =>\r\n  Math.floor(Math.random() * (Math.floor(max) - Math.random(max)));\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    message: messages[randomInt(messages.length)],\r\n    shadow: \"0 0 0 #fff\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.reRainbow(), 10);\r\n  }\r\n\r\n  reRainbow = () => {\r\n    const shadow = `0 0 0 ${colors[randomInt(colors.length)]}, ${randomInt(\r\n      1\r\n    )}vw ${randomInt(4)}vw ${randomInt(4)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(2)}vw ${randomInt(8)}vw ${randomInt(8)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(3)}vw ${randomInt(12)}vw ${randomInt(12)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(4)}vw ${randomInt(16)}vw ${randomInt(16)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(5)}vw ${randomInt(20)}vw ${randomInt(20)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(6)}vw ${randomInt(24)}vw ${randomInt(24)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(7)}vw ${randomInt(28)}vw ${randomInt(28)}vw  ${\r\n      colors[randomInt(colors.length)]\r\n    },${randomInt(8)}vw ${randomInt(32)}vw ${randomInt(32)}vw ${\r\n      colors[randomInt(colors.length)]\r\n    }`;\r\n\r\n    this.setState({ shadow });\r\n  };\r\n\r\n  render() {\r\n    const { message, shadow } = this.state;\r\n    return (\r\n      <HeaderCont>\r\n        <span>\r\n          <h2>{message}</h2>\r\n          <Binkie\r\n            style={{ textShadow: shadow }}\r\n            onClick={this.reRainbow}\r\n            onMouseOver={this.reRainbow}\r\n          >\r\n            binkie\r\n          </Binkie>\r\n        </span>\r\n      </HeaderCont>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport Body from \"./Components/Body\";\r\nimport Footer from \"./Components/Footer\";\r\nimport Header from \"./Components/Header\";\r\nimport Ogg from \"./assets/fonts/Ogg-Roman.otf\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst theme = {\r\n  grey: \"#B9B4AF\",\r\n  main: \"#232323\",\r\n  gradient:\r\n    \"linear-gradient(#5F6460, #AC836B, #C5E199, #5DC99F, #3B6D81, #6F677F, #812A3A, #79341A,#504235)\"\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Work+Sans|Sarabun');\r\n  @font-face {\r\n    font-family: 'Ogg';\r\n    src: url(${Ogg});\r\n  }\r\n\r\n  * {\r\n    box-sizing:border-box;\r\n    padding:0;\r\n    margin:0;\r\n  }\r\n  html {\r\n    font-size:62.5%;\r\n  }\r\n  body {\r\n    color:${props => props.theme.main};\r\n    font-size:2.4rem;\r\n\r\n    @media(max-width:550px) {\r\n      padding:10px;\r\n    }\r\n  }\r\n  h1,h2,h3,h4,h5,h6 { font-family: 'Ogg', serif; }\r\n  p,span,a,label,button,textarea,li,figcaption { font-family:'Work Sans', sans-serif; font-size:1.6rem; }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  height: auto;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 720px) {\r\n    width: calc(100% - 40px);\r\n    padding-top: 40px;\r\n  }\r\n`;\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://nodejs-d46mbauhe.now.sh\"\r\n});\r\n\r\nconst App = () => (\r\n  <ApolloProvider client={client}>\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Header />\r\n        <Body />\r\n        <Footer />\r\n        <GlobalStyle />\r\n      </Container>\r\n    </ThemeProvider>\r\n  </ApolloProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Ogg-Roman.56aae150.otf\";"],"sourceRoot":""}